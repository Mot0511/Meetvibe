import json
from aiogram import Router, F, types
from utils.search import search
from aiogram.enums.parse_mode import ParseMode
from kbds import reply
from sqlalchemy.ext.asyncio import AsyncSession
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext

search_router = Router()

@search_router.message(F.text == '–ù–∞—á–∞—Ç—å –ø–æ–∏—Å–∫')
async def start_search(mess: types.Message):
    await mess.answer(text='–í—ã–±–µ—Ä–∏ –ø–æ–ª', reply_markup=reply.kb_gender)
    
@search_router.message((F.text == '–ú—É–∂—Å–∫–æ–π') | (F.text == '–ñ–µ–Ω—Å–∫–∏–π'))
async def start_search(mess: types.Message, session: AsyncSession):
    users = await search(mess.from_user.id, mess.text, session)

    for user in users:
        hobbies_str = ''
        print(user.hobbies)
        for hobby in json.loads(user.hobbies):
            hobbies_str += hobby + ', '

        await mess.answer_photo(photo=user.photo, caption=f'\
<b>{user.name}</b>, <b>{int(user.age)} –ª–µ—Ç</b>, <b>{user.city}</b>{f', üìç<b>{user.distance} –º</b>' if user.distance != 12000000 else '' }\n\
{( user.school and f'<b>–®–∫–æ–ª–∞: {int(user.school)}</b>\n')}\
<b>–°—Ö–æ–∂–µ—Å—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–æ–≤: {user.hobbies_prop} %</b>\n\
<b>–ò–Ω—Ç–µ—Ä–µ—Å—ã: {hobbies_str}</b>\n\
{(user.description and user.description)}', parse_mode=ParseMode.HTML)

# , reply_markup=reply.get_keyboard('‚úÖ', '‚ùå')